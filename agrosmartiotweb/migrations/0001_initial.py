# Generated by Django 4.2.3 on 2025-02-04 01:39

import agrosmartiotweb.models
import datetime
from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('superuser', 'Superusuario'), ('admin', 'Administrador'), ('colaborador', 'Colaborador'), ('ayudante', 'Ayudante'), ('agricultor', 'Agricultor')], default='superuser', max_length=15)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Huerto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='huerto_creado', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='agrosmartiotweb.huerto')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InsumoOpciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opciones_trabajo', models.CharField(choices=[('Fertilizantes (urea, nitrato de amonio)', 'Fertilizantes (urea, nitrato de amonio)'), ('Fungicidas (azufre, Tercel 50 WP)', 'Fungicidas (azufre, Tercel 50 WP)'), ('Herbicidas (Roundup)', 'Herbicidas (Roundup)'), ('Pesticidas (Podexal)', 'Pesticidas (Podexal)'), ('Agua de riego', 'Agua de riego'), ('Postes y alambres', 'Postes y alambres'), ('Cintas de amarre', 'Cintas de amarre'), ('Semillas', 'Semillas'), ('Sustratos', 'Sustratos'), ('Aplicación de pesticidas y fertilizantes', 'Aplicación de pesticidas y fertilizantes'), ('Tractores, arados, sembradoras', 'Tractores, arados, sembradoras'), ('Sistema de riego', 'Sistema de riego'), ('Pulverizadores', 'Pulverizadores'), ('Transporte de insumos', 'Transporte de insumos'), ('Cosecha y acarreo de uvas', 'Cosecha y acarreo de uvas'), ('Otro', 'Otro')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SensorAire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('api_key', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fundos/fotosnueva/')),
                ('nombre', models.CharField(max_length=50, null=True)),
                ('rut', models.CharField(max_length=12, null=True, validators=[agrosmartiotweb.models.validate_rut])),
                ('fecha_ingreso', models.DateField(default=datetime.date.today)),
                ('fecha_termino_contrato', models.DateField(blank=True, null=True)),
                ('tipo_contraro', models.CharField(choices=[('Indefinido', 'Indefinido'), ('Plazo fijo', 'Plazo fijo'), ('Honorario', 'Honorario'), ('Sin Contrato', 'Sin Contrato')], default='Plazo fijo', max_length=15)),
                ('cobro', models.IntegerField(blank=True, null=True)),
                ('trabajo_a_realizar', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajadores_creados', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_ingreso'],
            },
        ),
        migrations.CreateModel(
            name='TemperatureHumidityLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('humidity', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sensoraire')),
            ],
        ),
        migrations.CreateModel(
            name='SensorSuelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('api_key', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SectorPoligon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('coordenadas', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectorPoligon_creado', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo_uso', models.CharField(choices=[('cultivo', 'Cultivo'), ('pastoreo', 'Pastoreo'), ('reserva', 'Reserva'), ('infraestructura', 'Infraestructura'), ('otro', 'Otro')], max_length=20)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('inactivo', 'Inactivo')], max_length=30)),
                ('coordenadas', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sector_creado', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Procesos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trabajo', models.CharField(choices=[('Fertilizantes (urea, nitrato de amonio)', 'Fertilizantes (urea, nitrato de amonio)'), ('Fungicidas (azufre, Tercel 50 WP)', 'Fungicidas (azufre, Tercel 50 WP)'), ('Herbicidas (Roundup)', 'Herbicidas (Roundup)'), ('Pesticidas (Podexal)', 'Pesticidas (Podexal)'), ('Agua de riego', 'Agua de riego'), ('Postes y alambres', 'Postes y alambres'), ('Cintas de amarre', 'Cintas de amarre'), ('Semillas', 'Semillas'), ('Sustratos', 'Sustratos'), ('Aplicación de pesticidas y fertilizantes', 'Aplicación de pesticidas y fertilizantes'), ('Tractores, arados, sembradoras', 'Tractores, arados, sembradoras'), ('Sistema de riego', 'Sistema de riego'), ('Pulverizadores', 'Pulverizadores'), ('Transporte de insumos', 'Transporte de insumos'), ('Cosecha y acarreo de uvas', 'Cosecha y acarreo de uvas'), ('Herramientas de poda', 'Herramientas de poda'), ('Invernaderos', 'Invernaderos'), ('Tuberías y conexiones', 'Tuberías y conexiones'), ('Control biológico (insectos benéficos, trampas)', 'Control biológico (insectos benéficos, trampas)'), ('Mallas anti-granizo o anti-insectos', 'Mallas anti-granizo o anti-insectos'), ('Mantenimiento de maquinaria', 'Mantenimiento de maquinaria'), ('Aceites y lubricantes', 'Aceites y lubricantes'), ('Capacitación técnica', 'Capacitación técnica'), ('Automatización agrícola', 'Automatización agrícola'), ('Sensores y drones', 'Sensores y drones'), ('Análisis de suelo y agua', 'Análisis de suelo y agua'), ('Compostaje y abonos orgánicos', 'Compostaje y abonos orgánicos'), ('Material para viveros', 'Material para viveros'), ('Construcción de terrazas', 'Construcción de terrazas'), ('Control de malezas manual', 'Control de malezas manual'), ('Equipos de protección personal (EPP)', 'Equipos de protección personal (EPP)'), ('Material de embalaje', 'Material de embalaje'), ('Almacenamiento y silos', 'Almacenamiento y silos'), ('Iluminación para cultivos (LEDs)', 'Iluminación para cultivos (LEDs)'), ('Fertilizantes foliares', 'Fertilizantes foliares'), ('Tanques de almacenamiento', 'Tanques de almacenamiento'), ('Energías renovables (paneles solares, generadores)', 'Energías renovables (paneles solares, generadores)'), ('Reparación de instalaciones', 'Reparación de instalaciones'), ('Caminos y accesos agrícolas', 'Caminos y accesos agrícolas'), ('Diques y reservorios de agua', 'Diques y reservorios de agua'), ('Otro', 'Otro')], max_length=100)),
                ('fecha_compra', models.DateField(null=True)),
                ('estado', models.CharField(choices=[('Por Realizar', 'Por Realizar'), ('En Proceso', 'En Proceso'), ('Terminado', 'Terminado')], default='Por Realizar', max_length=15)),
                ('fecha_creacion', models.DateField(default=datetime.date.today, editable=False)),
                ('hora_creacion', models.TimeField(default=datetime.time(22, 39, 8, 24148), editable=False)),
                ('presupuesto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('observacion', models.CharField(blank=True, max_length=100, null=True)),
                ('asignado', models.ForeignKey(max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.trabajador')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos_creados', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lote_creado', to=settings.AUTH_USER_MODEL)),
                ('huerto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.huerto')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JornadaPorTrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateField(default=datetime.date.today, editable=False)),
                ('hora_creacion', models.TimeField(default=datetime.time(22, 39, 8, 26147), editable=False)),
                ('fecha', models.DateField()),
                ('estado', models.CharField(choices=[('Por Realizar', 'Por Realizar'), ('En Proceso', 'En Proceso'), ('Terminado', 'Terminado')], default='Por Realizar', max_length=15)),
                ('nombre_tarea_1', models.CharField(choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego')], max_length=100)),
                ('cobro_tarea_1', models.IntegerField(blank=True, null=True)),
                ('nombre_tarea_2', models.CharField(blank=True, choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego')], max_length=100, null=True)),
                ('cobro_tarea_2', models.IntegerField(blank=True, null=True)),
                ('nombre_tarea_3', models.CharField(blank=True, choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego')], max_length=100, null=True)),
                ('cobro_tarea_3', models.IntegerField(blank=True, null=True)),
                ('nombre_extra_1', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_1', models.IntegerField(blank=True, null=True)),
                ('nombre_extra_2', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_2', models.IntegerField(blank=True, null=True)),
                ('nombre_extra_3', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_3', models.IntegerField(blank=True, null=True)),
                ('observacion', models.CharField(blank=True, max_length=200, null=True)),
                ('detalle_gasto_total_tareas', models.IntegerField(blank=True, editable=False, null=True)),
                ('detalle_gastos_total_extras', models.IntegerField(blank=True, editable=False, null=True)),
                ('total_gasto_jornada', models.IntegerField(blank=True, editable=False, null=True)),
                ('asignado', models.ForeignKey(max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.trabajador')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jornadas_por_trato_creadas', to=settings.AUTH_USER_MODEL)),
                ('huerto', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.huerto')),
                ('lote', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.lote')),
                ('sector', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_creacion', '-hora_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Jornada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateField(default=datetime.date.today, editable=False)),
                ('hora_creacion', models.TimeField(default=datetime.time(22, 39, 8, 25148), editable=False)),
                ('fecha', models.DateField()),
                ('estado', models.CharField(choices=[('Por Realizar', 'Por Realizar'), ('En Proceso', 'En Proceso'), ('Terminado', 'Terminado')], default='Por Realizar', max_length=15)),
                ('es_jornada_por_trato', models.BooleanField(default=False)),
                ('nombre_tarea_1', models.CharField(choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego'), ('PREPARACION_SUELO', 'Preparación del suelo'), ('PLANTACION', 'Plantación de cultivos'), ('ABONADO', 'Abonado'), ('LABRANZA', 'Labranza'), ('CONTROL_PLAGAS', 'Control manual de plagas'), ('DESINFECCION_SUELOS', 'Desinfección de suelos'), ('MONITOREO_CULTIVOS', 'Monitoreo de cultivos'), ('INSTALACION_RIEGO', 'Instalación de sistemas de riego'), ('RECOLECCION_RESIDUOS', 'Recolección de residuos'), ('INSTALACION_TUTORES', 'Instalación de tutores'), ('PODA_FORMACION', 'Poda de formación'), ('PODA_MANTENIMIENTO', 'Poda de mantenimiento'), ('ENTRESACADO_FRUTOS', 'Entresacado de frutos'), ('REPARACION_CERCAS', 'Reparación de cercas'), ('INSTALACION_RED_PROTECCION', 'Instalación de redes de protección'), ('MANEJO_POST_COSECHA', 'Manejo post-cosecha'), ('CLASIFICACION_UVAS', 'Clasificación de uvas'), ('TRANSPORTE_CARGA', 'Transporte de carga'), ('MANTENIMIENTO_MAQUINARIA', 'Mantenimiento de maquinaria'), ('REPLANTE_PLANTAS', 'Replante de plantas'), ('ACARREO_INSUMOS', 'Acarreo de insumos'), ('MANTENIMIENTO_RIEGO', 'Mantenimiento de sistemas de riego'), ('CONTROL_EROSION', 'Control de erosión'), ('CUBIERTA_ORGANICA', 'Colocación de cubierta orgánica'), ('APLICACION_BIOESTIMULANTES', 'Aplicación de bioestimulantes'), ('FERTIRRIGACION', 'Fertirrigación'), ('INSTALACION_SOMBREADO', 'Instalación de sistemas de sombreado'), ('DESINFECCION_HERRAMIENTAS', 'Desinfección de herramientas'), ('CAPACITACION_PERSONAL', 'Capacitación del personal')], max_length=100)),
                ('hora_inicio_tarea_1', models.TimeField()),
                ('hora_fin_tarea_1', models.TimeField()),
                ('cobro_tarea_1', models.IntegerField(blank=True, null=True)),
                ('nombre_tarea_2', models.CharField(blank=True, choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego'), ('PREPARACION_SUELO', 'Preparación del suelo'), ('PLANTACION', 'Plantación de cultivos'), ('ABONADO', 'Abonado'), ('LABRANZA', 'Labranza'), ('CONTROL_PLAGAS', 'Control manual de plagas'), ('DESINFECCION_SUELOS', 'Desinfección de suelos'), ('MONITOREO_CULTIVOS', 'Monitoreo de cultivos'), ('INSTALACION_RIEGO', 'Instalación de sistemas de riego'), ('RECOLECCION_RESIDUOS', 'Recolección de residuos'), ('INSTALACION_TUTORES', 'Instalación de tutores'), ('PODA_FORMACION', 'Poda de formación'), ('PODA_MANTENIMIENTO', 'Poda de mantenimiento'), ('ENTRESACADO_FRUTOS', 'Entresacado de frutos'), ('REPARACION_CERCAS', 'Reparación de cercas'), ('INSTALACION_RED_PROTECCION', 'Instalación de redes de protección'), ('MANEJO_POST_COSECHA', 'Manejo post-cosecha'), ('CLASIFICACION_UVAS', 'Clasificación de uvas'), ('TRANSPORTE_CARGA', 'Transporte de carga'), ('MANTENIMIENTO_MAQUINARIA', 'Mantenimiento de maquinaria'), ('REPLANTE_PLANTAS', 'Replante de plantas'), ('ACARREO_INSUMOS', 'Acarreo de insumos'), ('MANTENIMIENTO_RIEGO', 'Mantenimiento de sistemas de riego'), ('CONTROL_EROSION', 'Control de erosión'), ('CUBIERTA_ORGANICA', 'Colocación de cubierta orgánica'), ('APLICACION_BIOESTIMULANTES', 'Aplicación de bioestimulantes'), ('FERTIRRIGACION', 'Fertirrigación'), ('INSTALACION_SOMBREADO', 'Instalación de sistemas de sombreado'), ('DESINFECCION_HERRAMIENTAS', 'Desinfección de herramientas'), ('CAPACITACION_PERSONAL', 'Capacitación del personal')], max_length=100, null=True)),
                ('hora_inicio_tarea_2', models.TimeField(blank=True, null=True)),
                ('hora_fin_tarea_2', models.TimeField(blank=True, null=True)),
                ('cobro_tarea_2', models.IntegerField(blank=True, null=True)),
                ('nombre_tarea_3', models.CharField(blank=True, choices=[('PODA', 'Poda'), ('DESHOJE', 'Deshoje (sacar hojas)'), ('DESBROTE', 'Desbrote'), ('PESTICIDAS', 'Aplicación de pesticidas'), ('FERTILIZANTES', 'Aplicación de fertilizantes'), ('COSECHA', 'Cosecha'), ('AMARRE_GUIAS', 'Amarre de guías'), ('LIMPIEZA_MALEZA', 'Limpieza de maleza'), ('RIEGO', 'Riego'), ('PREPARACION_SUELO', 'Preparación del suelo'), ('PLANTACION', 'Plantación de cultivos'), ('ABONADO', 'Abonado'), ('LABRANZA', 'Labranza'), ('CONTROL_PLAGAS', 'Control manual de plagas'), ('DESINFECCION_SUELOS', 'Desinfección de suelos'), ('MONITOREO_CULTIVOS', 'Monitoreo de cultivos'), ('INSTALACION_RIEGO', 'Instalación de sistemas de riego'), ('RECOLECCION_RESIDUOS', 'Recolección de residuos'), ('INSTALACION_TUTORES', 'Instalación de tutores'), ('PODA_FORMACION', 'Poda de formación'), ('PODA_MANTENIMIENTO', 'Poda de mantenimiento'), ('ENTRESACADO_FRUTOS', 'Entresacado de frutos'), ('REPARACION_CERCAS', 'Reparación de cercas'), ('INSTALACION_RED_PROTECCION', 'Instalación de redes de protección'), ('MANEJO_POST_COSECHA', 'Manejo post-cosecha'), ('CLASIFICACION_UVAS', 'Clasificación de uvas'), ('TRANSPORTE_CARGA', 'Transporte de carga'), ('MANTENIMIENTO_MAQUINARIA', 'Mantenimiento de maquinaria'), ('REPLANTE_PLANTAS', 'Replante de plantas'), ('ACARREO_INSUMOS', 'Acarreo de insumos'), ('MANTENIMIENTO_RIEGO', 'Mantenimiento de sistemas de riego'), ('CONTROL_EROSION', 'Control de erosión'), ('CUBIERTA_ORGANICA', 'Colocación de cubierta orgánica'), ('APLICACION_BIOESTIMULANTES', 'Aplicación de bioestimulantes'), ('FERTIRRIGACION', 'Fertirrigación'), ('INSTALACION_SOMBREADO', 'Instalación de sistemas de sombreado'), ('DESINFECCION_HERRAMIENTAS', 'Desinfección de herramientas'), ('CAPACITACION_PERSONAL', 'Capacitación del personal')], max_length=100, null=True)),
                ('hora_inicio_tarea_3', models.TimeField(blank=True, null=True)),
                ('hora_fin_tarea_3', models.TimeField(blank=True, null=True)),
                ('cobro_tarea_3', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('nombre_extra_1', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_1', models.IntegerField(blank=True, null=True)),
                ('nombre_extra_2', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_2', models.IntegerField(blank=True, null=True)),
                ('nombre_extra_3', models.CharField(blank=True, max_length=100, null=True)),
                ('gasto_extra_3', models.IntegerField(blank=True, null=True)),
                ('observacion', models.CharField(blank=True, max_length=200, null=True)),
                ('total_gasto_jornada', models.IntegerField(blank=True, editable=False, null=True)),
                ('detalle_gasto_total_tareas', models.IntegerField(blank=True, editable=False, null=True)),
                ('detalle_gastos_total_extras', models.IntegerField(blank=True, editable=False, null=True)),
                ('asignado', models.ForeignKey(max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.trabajador')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jornadas_creadas', to=settings.AUTH_USER_MODEL)),
                ('huerto', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.huerto')),
                ('lote', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.lote')),
                ('sector', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_creacion', '-hora_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HumidityTemperaturaSoil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humiditysoil', models.FloatField()),
                ('temperature', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sensorsuelo')),
            ],
        ),
        migrations.AddField(
            model_name='huerto',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sector'),
        ),
        migrations.AddField(
            model_name='huerto',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FinanzasPorTrabajador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_gasto_jornadas', models.IntegerField(default=0, editable=False)),
                ('total_gasto_jornadas_por_trato', models.IntegerField(default=0, editable=False)),
                ('total_gasto_final', models.IntegerField(default=0, editable=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finanzas_creadas', to=settings.AUTH_USER_MODEL)),
                ('trabajador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.trabajador')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinanzasPorMes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes_año', models.DateField()),
                ('total_gasto_jornadas', models.IntegerField(blank=True, editable=False, null=True)),
                ('total_gasto_jornadas_por_trato', models.IntegerField(blank=True, editable=False, null=True)),
                ('total_gasto_final', models.IntegerField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finanzas_por_mes_creada', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinanzasPorInsumosyMaquinaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gasto_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finanzas_created_by', to=settings.AUTH_USER_MODEL)),
                ('trabajo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.procesos')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finanzas_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmpresaOFundo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('numero_hectareas', models.DecimalField(decimal_places=2, max_digits=10)),
                ('foto1', models.ImageField(blank=True, null=True, upload_to='fundos/fotos/')),
                ('foto2', models.ImageField(blank=True, null=True, upload_to='fundos/fotos/')),
                ('foto3', models.ImageField(blank=True, null=True, upload_to='fundos/fotos/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='fundos/logos/')),
                ('ubicacion', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo_cultivo', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresa_creada', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DecisionEfectuada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(max_length=5000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decisiones_tomadas', to=settings.AUTH_USER_MODEL)),
                ('huerto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.huerto')),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.lote')),
                ('sector', models.ForeignKey(max_length=50, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sector')),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sensoraire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cosecha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fundos/fotosnueva/')),
                ('cantidad', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_cosecha', models.DateField()),
                ('tipo_producto', models.CharField(max_length=100)),
                ('calidad', models.CharField(choices=[('Alta', 'Alta'), ('Media', 'Media'), ('Baja', 'Baja')], default='Media', max_length=50)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ultima_modificacion', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cosechas_creadas', to=settings.AUTH_USER_MODEL)),
                ('huerto', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.huerto')),
                ('lote', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.lote')),
                ('sector', models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='agrosmartiotweb.sector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cosecha',
                'verbose_name_plural': 'Cosechas',
                'ordering': ['-fecha_cosecha'],
            },
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('correo', models.EmailField(max_length=254)),
                ('tipo_consulta', models.IntegerField(choices=[[0, 'Consulta'], [1, 'Reclamo'], [2, 'Sugerencia'], [3, 'Felicitaciones']])),
                ('mensaje', models.TextField()),
                ('avisos', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='empresa',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='empresas', to='agrosmartiotweb.empresaofundo'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
